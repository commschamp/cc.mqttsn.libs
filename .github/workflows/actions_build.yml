name: Github Actions Build

on: [push]

jobs:
  build_gcc_old_ubuntu_20_04:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        type: [Debug, Release, MinSizeRel]
        cc_ver: [5, 6, 7]
        cpp: [11, 14]

    steps:
    - uses: actions/checkout@v2

    - name: Add repositories
      run: |
        sudo add-apt-repository 'deb http://archive.ubuntu.com/ubuntu/ bionic main'; \
        sudo add-apt-repository 'deb http://archive.ubuntu.com/ubuntu/ bionic universe'   

    - name: Prepare Install
      run: sudo apt-get update --fix-missing    
      
    - name: Install Packages
      run: sudo apt install qtbase5-dev gcc-${{matrix.cc_ver}} g++-${{matrix.cc_ver}}

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: |
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{matrix.type}} -DCMAKE_CXX_STANDARD=${{matrix.cpp}} \
        -DCMAKE_INSTALL_PREFIX=install -DCMAKE_EXE_LINKER_FLAGS=-fuse-ld=gold
      env:
        CC: gcc-${{matrix.cc_ver}}
        CXX: g++-${{matrix.cc_ver}}

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config ${{matrix.type}} --target install
      env:
        VERBOSE: 1 

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: ctest 

  build_gcc_ubuntu_20_04:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        type: [Debug, Release, MinSizeRel]
        cc_ver: [8]
        cpp: [11, 14, 17]

    steps:
    - uses: actions/checkout@v2

    - name: Prepare Install
      run: sudo apt-get update --fix-missing    
      
    - name: Install Packages
      run: sudo apt install qtbase5-dev gcc-${{matrix.cc_ver}} g++-${{matrix.cc_ver}}

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: 
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{matrix.type}} -DCMAKE_CXX_STANDARD=${{matrix.cpp}} \
        -DCMAKE_INSTALL_PREFIX=install
      env:
        CC: gcc-${{matrix.cc_ver}}
        CXX: g++-${{matrix.cc_ver}}

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config ${{matrix.type}} --target install
      env:
        VERBOSE: 1 

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: ctest 

  build_gcc_ubuntu_22_04:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        type: [Debug, Release, MinSizeRel]
        cc_ver: [9, 10, 11, 12]
        cpp: [11, 14, 17, 20]

    steps:
    - uses: actions/checkout@v2

    - name: Prepare Install
      run: sudo apt-get update --fix-missing    
      
    - name: Install Packages
      run: sudo apt install qtbase5-dev gcc-${{matrix.cc_ver}} g++-${{matrix.cc_ver}}

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: 
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{matrix.type}} -DCMAKE_CXX_STANDARD=${{matrix.cpp}} \
        -DCMAKE_INSTALL_PREFIX=install
      env:
        CC: gcc-${{matrix.cc_ver}}
        CXX: g++-${{matrix.cc_ver}}

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config ${{matrix.type}} --target install
      env:
        VERBOSE: 1 

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: ctest       
      
# - clang crashes up to version 9
  build_clang_ubuntu_20_04:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        type: [Debug, Release, MinSizeRel]
        cc_ver: [9, 10, 11] 
        cpp: [11, 14, 17, 20]

    steps:
    - uses: actions/checkout@v2

    - name: Prepare Install
      run: sudo apt-get update --fix-missing    
      
    - name: Install Packages
      run: sudo apt install qtbase5-dev clang-${{matrix.cc_ver}}

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: |
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{matrix.type}} -DCMAKE_CXX_STANDARD=${{matrix.cpp}} \
        -DCMAKE_INSTALL_PREFIX=install
      env:
        CC: clang-${{matrix.cc_ver}}
        CXX: clang++-${{matrix.cc_ver}}

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config ${{matrix.type}} --target install
      env:
        VERBOSE: 1 

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: ctest 
          
  build_clang_ubuntu_22_04:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        type: [Debug, Release, MinSizeRel]
        cc_ver: [12, 13, 14]
        cpp: [11, 14, 17, 20]

    steps:
    - uses: actions/checkout@v2

    - name: Prepare Install
      run: sudo apt-get update --fix-missing    
      
    - name: Install Packages
      run: sudo apt install qtbase5-dev clang-${{matrix.cc_ver}}

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: |
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{matrix.type}} -DCMAKE_CXX_STANDARD=${{matrix.cpp}} \
        -DCMAKE_INSTALL_PREFIX=install
      env:
        CC: clang-${{matrix.cc_ver}}
        CXX: clang++-${{matrix.cc_ver}}

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config ${{matrix.type}} --target install
      env:
        VERBOSE: 1 

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: ctest 
          