name: Github Actions Build

on: [push]

env:
  COMMS_TAG: v5.2.3
  CC_MQTTSN_TAG: v2.7
  CC_MQTT311_TAG: v2.7

jobs:
  build_gcc_old_ubuntu_20_04:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        type: [Debug, Release, MinSizeRel]
        cc_ver: [5, 6, 7]
        cpp: [11, 14]

    steps:
    - uses: actions/checkout@v4

    - name: Add repositories
      run: |
        sudo add-apt-repository 'deb http://archive.ubuntu.com/ubuntu/ bionic main'; \
        sudo add-apt-repository 'deb http://archive.ubuntu.com/ubuntu/ bionic universe'   

    - name: Prepare Install
      run: sudo apt-get update --fix-missing    
      
    - name: Install Packages
      run: sudo apt install qtbase5-dev valgrind gcc-${{matrix.cc_ver}} g++-${{matrix.cc_ver}}

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Prepare externals
      shell: bash
      run: $GITHUB_WORKSPACE/script/prepare_externals.sh
      env:
        BUILD_DIR: ${{runner.workspace}}/build
        CC: gcc-${{matrix.cc_ver}}
        CXX: g++-${{matrix.cc_ver}}
        EXTERNALS_DIR: ${{runner.workspace}}/externals
        COMMON_INSTALL_DIR: ${{runner.workspace}}/build/install
        COMMON_BUILD_TYPE: ${{matrix.type}}
        COMMON_CXX_STANDARD: ${{matrix.cpp}}
        COMMS_TAG: ${{env.COMMS_TAG}}
        CC_MQTTSN_TAG: ${{env.CC_MQTTSN_TAG}}
        CC_MQTT311_TAG: ${{env.CC_MQTT311_TAG}}

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: |
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{matrix.type}} -DCMAKE_CXX_STANDARD=${{matrix.cpp}} \
        -DCMAKE_INSTALL_PREFIX=install -DCMAKE_EXE_LINKER_FLAGS=-fuse-ld=gold -DCMAKE_PREFIX_PATH=${{runner.workspace}}/build/install \
        -DCC_MQTTSN_BUILD_UNIT_TESTS=ON -DCC_MQTTSN_UNIT_TEST_WITH_VALGRIND=ON
      env:
        CC: gcc-${{matrix.cc_ver}}
        CXX: g++-${{matrix.cc_ver}}

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config ${{matrix.type}} --target install
      env:
        VERBOSE: 1 

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: ctest -V 

  build_gcc_ubuntu_20_04:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        type: [Debug, Release, MinSizeRel]
        cc_ver: [8]
        cpp: [11, 14, 17]

    steps:
    - uses: actions/checkout@v4

    - name: Prepare Install
      run: sudo apt-get update --fix-missing    
      
    - name: Install Packages
      run: sudo apt install qtbase5-dev gcc-${{matrix.cc_ver}} g++-${{matrix.cc_ver}}

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Prepare externals
      shell: bash
      run: $GITHUB_WORKSPACE/script/prepare_externals.sh
      env:
        BUILD_DIR: ${{runner.workspace}}/build
        CC: gcc-${{matrix.cc_ver}}
        CXX: g++-${{matrix.cc_ver}}
        EXTERNALS_DIR: ${{runner.workspace}}/externals
        COMMON_INSTALL_DIR: ${{runner.workspace}}/build/install
        COMMON_BUILD_TYPE: ${{matrix.type}}
        COMMON_CXX_STANDARD: ${{matrix.cpp}}
        COMMS_TAG: ${{env.COMMS_TAG}}
        CC_MQTTSN_TAG: ${{env.CC_MQTTSN_TAG}}
        CC_MQTT311_TAG: ${{env.CC_MQTT311_TAG}}

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: |
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{matrix.type}} -DCMAKE_CXX_STANDARD=${{matrix.cpp}} \
        -DCMAKE_INSTALL_PREFIX=install -DCMAKE_PREFIX_PATH=${{runner.workspace}}/build/install \
        -DCC_MQTTSN_BUILD_UNIT_TESTS=ON -DCC_MQTTSN_WITH_SANITIZERS=ON
      env:
        CC: gcc-${{matrix.cc_ver}}
        CXX: g++-${{matrix.cc_ver}}

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config ${{matrix.type}} --target install
      env:
        VERBOSE: 1 

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: ctest -V 

  build_gcc_ubuntu_22_04:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        type: [Debug, Release, MinSizeRel]
        cc_ver: [9, 10, 11, 12]
        cpp: [11, 14, 17, 20]

    steps:
    - uses: actions/checkout@v4

    - name: Prepare Install
      run: sudo apt-get update --fix-missing    
      
    - name: Install Packages
      run: sudo apt install qtbase5-dev gcc-${{matrix.cc_ver}} g++-${{matrix.cc_ver}}

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Prepare externals
      shell: bash
      run: $GITHUB_WORKSPACE/script/prepare_externals.sh
      env:
        BUILD_DIR: ${{runner.workspace}}/build
        CC: gcc-${{matrix.cc_ver}}
        CXX: g++-${{matrix.cc_ver}}
        EXTERNALS_DIR: ${{runner.workspace}}/externals
        COMMON_INSTALL_DIR: ${{runner.workspace}}/build/install
        COMMON_BUILD_TYPE: ${{matrix.type}}
        COMMON_CXX_STANDARD: ${{matrix.cpp}}
        COMMS_TAG: ${{env.COMMS_TAG}}
        CC_MQTTSN_TAG: ${{env.CC_MQTTSN_TAG}}
        CC_MQTT311_TAG: ${{env.CC_MQTT311_TAG}}

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: |
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{matrix.type}} -DCMAKE_CXX_STANDARD=${{matrix.cpp}} \
        -DCMAKE_INSTALL_PREFIX=install -DCMAKE_PREFIX_PATH=${{runner.workspace}}/build/install \
        -DCC_MQTTSN_BUILD_UNIT_TESTS=ON -DCC_MQTTSN_WITH_SANITIZERS=ON
      env:
        CC: gcc-${{matrix.cc_ver}}
        CXX: g++-${{matrix.cc_ver}}

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config ${{matrix.type}} --target install
      env:
        VERBOSE: 1 

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: ctest -V       
      
# - clang crashes up to version 9
  build_clang_ubuntu_20_04:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        type: [Debug, Release, MinSizeRel]
        cc_ver: [9, 10, 11] 
        cpp: [11, 14, 17, 20]

    steps:
    - uses: actions/checkout@v4

    - name: Prepare Install
      run: sudo apt-get update --fix-missing    
      
    - name: Install Packages
      run: sudo apt install qtbase5-dev clang-${{matrix.cc_ver}}

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Prepare externals
      shell: bash
      run: $GITHUB_WORKSPACE/script/prepare_externals.sh
      env:
        BUILD_DIR: ${{runner.workspace}}/build
        CC: clang-${{matrix.cc_ver}}
        CXX: clang++-${{matrix.cc_ver}}
        EXTERNALS_DIR: ${{runner.workspace}}/externals
        COMMON_INSTALL_DIR: ${{runner.workspace}}/build/install
        COMMON_BUILD_TYPE: ${{matrix.type}}
        COMMON_CXX_STANDARD: ${{matrix.cpp}}
        COMMS_TAG: ${{env.COMMS_TAG}}
        CC_MQTTSN_TAG: ${{env.CC_MQTTSN_TAG}}
        CC_MQTT311_TAG: ${{env.CC_MQTT311_TAG}}

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: |
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{matrix.type}} -DCMAKE_CXX_STANDARD=${{matrix.cpp}} \
        -DCMAKE_INSTALL_PREFIX=install -DCMAKE_PREFIX_PATH=${{runner.workspace}}/build/install \
        -DCC_MQTTSN_BUILD_UNIT_TESTS=ON -DCC_MQTTSN_WITH_SANITIZERS=ON
      env:
        CC: clang-${{matrix.cc_ver}}
        CXX: clang++-${{matrix.cc_ver}}

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config ${{matrix.type}} --target install
      env:
        VERBOSE: 1 

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: ctest -V 
          
  build_clang_ubuntu_22_04:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        type: [Debug, Release, MinSizeRel]
        cc_ver: [12, 13, 14, 15]
        cpp: [11, 14, 17, 20]
        exclude:
          - cc_ver: 12
            cpp: 20
          - cc_ver: 13
            cpp: 20
          - cc_ver: 14
            cpp: 20

    steps:
    - uses: actions/checkout@v4

    - name: Prepare Install
      run: sudo apt-get update --fix-missing    
      
    - name: Install Packages
      run: sudo apt install qtbase5-dev clang-${{matrix.cc_ver}}

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Prepare externals
      shell: bash
      run: $GITHUB_WORKSPACE/script/prepare_externals.sh
      env:
        BUILD_DIR: ${{runner.workspace}}/build
        CC: clang-${{matrix.cc_ver}}
        CXX: clang++-${{matrix.cc_ver}}
        EXTERNALS_DIR: ${{runner.workspace}}/externals
        COMMON_INSTALL_DIR: ${{runner.workspace}}/build/install
        COMMON_BUILD_TYPE: ${{matrix.type}}
        COMMON_CXX_STANDARD: ${{matrix.cpp}}
        COMMS_TAG: ${{env.COMMS_TAG}}
        CC_MQTTSN_TAG: ${{env.CC_MQTTSN_TAG}}
        CC_MQTT311_TAG: ${{env.CC_MQTT311_TAG}}      

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: |
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{matrix.type}} -DCMAKE_CXX_STANDARD=${{matrix.cpp}} \
        -DCMAKE_INSTALL_PREFIX=install -DCMAKE_PREFIX_PATH=${{runner.workspace}}/build/install \
        -DCC_MQTTSN_BUILD_UNIT_TESTS=ON -DCC_MQTTSN_WITH_SANITIZERS=ON
      env:
        CC: clang-${{matrix.cc_ver}}
        CXX: clang++-${{matrix.cc_ver}}

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config ${{matrix.type}} --target install
      env:
        VERBOSE: 1 

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: ctest -V 
          
build_msvc_2019:
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        type: [Debug, Release, MinSizeRel]
        arch: [Win32, x64]
        cpp: [11, 14, 17]

    steps:
    - uses: actions/checkout@v4

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build   

    - name: Prepare externals
      shell: cmd
      run: |
        %GITHUB_WORKSPACE%\script\prepare_externals.bat
      env:
        BUILD_DIR: ${{runner.workspace}}/build
        PLATFORM: ${{matrix.arch}}
        EXTERNALS_DIR: ${{runner.workspace}}/externals
        COMMON_INSTALL_DIR: ${{runner.workspace}}/build/install
        COMMON_BUILD_TYPE: ${{matrix.type}}
        COMMON_CXX_STANDARD: ${{matrix.cpp}}
        COMMS_TAG: ${{env.COMMS_TAG}}
        CC_MQTT311_TAG: ${{env.CC_MQTT311_TAG}}
        CC_MQTTSN_TAG: ${{env.CC_MQTTSN_TAG}}

    - name: Configure CMake
      shell: cmd
      working-directory: ${{runner.workspace}}/build
      run: |
        cmake %GITHUB_WORKSPACE% -A ${{matrix.arch}} -DCMAKE_BUILD_TYPE=${{matrix.type}} -DCMAKE_INSTALL_PREFIX=install ^
          -DCMAKE_PREFIX_PATH=${{runner.workspace}}/build/install -DCMAKE_CXX_STANDARD=${{matrix.cpp}} ^
          -DCC_MQTTSN_BUILD_UNIT_TESTS=ON ^
          -DCC_MQTTSN_BUILD_CLIENT_APPS=OFF -DCC_MQTTSN_BUILD_GATEWAY_APPS=OFF

    - name: Build Target 
      working-directory: ${{runner.workspace}}/build
      shell: cmd
      run: cmake --build . --config ${{matrix.type}}
      env:
        VERBOSE: 1 
        
    - name: Testing
      working-directory: ${{runner.workspace}}/build
      shell: cmd
      run: ctest -V

  build_msvc_2022:
    runs-on: windows-2022
    strategy:
      fail-fast: false
      matrix:
        type: [Debug, Release, MinSizeRel]
        arch: [Win32, x64]
        cpp: [11, 14, 17, 20]

    steps:
    - uses: actions/checkout@v4

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build   

    - name: Prepare externals
      shell: cmd
      run: |
        %GITHUB_WORKSPACE%\script\prepare_externals.bat
      env:
        BUILD_DIR: ${{runner.workspace}}/build
        PLATFORM: ${{matrix.arch}}
        EXTERNALS_DIR: ${{runner.workspace}}/externals
        COMMON_INSTALL_DIR: ${{runner.workspace}}/build/install
        COMMON_BUILD_TYPE: ${{matrix.type}}
        COMMON_CXX_STANDARD: ${{matrix.cpp}}
        COMMS_TAG: ${{env.COMMS_TAG}}
        CC_MQTT311_TAG: ${{env.CC_MQTT311_TAG}}
        CC_MQTTSN_TAG: ${{env.CC_MQTTSN_TAG}}

    - name: Configure CMake
      shell: cmd
      working-directory: ${{runner.workspace}}/build
      run: |
        cmake %GITHUB_WORKSPACE% -A ${{matrix.arch}} -DCMAKE_BUILD_TYPE=${{matrix.type}} -DCMAKE_INSTALL_PREFIX=install ^
          -DCMAKE_PREFIX_PATH=${{runner.workspace}}/build/install -DCMAKE_CXX_STANDARD=${{matrix.cpp}} ^
          -DCC_MQTTSN_BUILD_UNIT_TESTS=ON ^
          -DCC_MQTTSN_BUILD_CLIENT_APPS=OFF -DCC_MQTTSN_BUILD_GATEWAY_APPS=OFF

    - name: Build Target 
      working-directory: ${{runner.workspace}}/build
      shell: cmd
      run: cmake --build . --config ${{matrix.type}}
      env:
        VERBOSE: 1 

    - name: Testing
      working-directory: ${{runner.workspace}}/build
      shell: cmd
      run: ctest -V