//
// Copyright 2016 - 2024 (C). Alex Robenko. All rights reserved.
//
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/.

#include "##NAME##client.h"
#include "ClientAllocator.h"
#include "ExtConfig.h"

#include "comms/util/ScopeGuard.h"

struct CC_MqttsnClient {};

namespace
{

cc_mqttsn_client::ClientAllocator& getClientAllocator()
{
    static cc_mqttsn_client::ClientAllocator Allocator;
    return Allocator;
}

inline cc_mqttsn_client::ClientImpl* clientFromHandle(CC_MqttsnClientHandle handle)
{
    return reinterpret_cast<cc_mqttsn_client::ClientImpl*>(handle);
}

inline CC_MqttsnClientHandle handleFromClient(cc_mqttsn_client::ClientImpl* client)
{
    return reinterpret_cast<CC_MqttsnClientHandle>(client);
}

}  // namespace

CC_MqttsnClientHandle cc_mqttsn_##NAME##client_new()
{
    auto client = getClientAllocator().alloc();
    return handleFromClient(client.release());   
}

void cc_mqttsn_##NAME##client_free(CC_MqttsnClientHandle handle)
{
    getClientAllocator().free(clientFromHandle(handle));
}
